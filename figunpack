#!/usr/bin/env ruby

require 'zlib'
require 'json'
require 'fileutils'

def inflate(string)
  zstream = Zlib::Inflate.new(-Zlib::MAX_WBITS)
  buf = zstream.inflate(string)
  zstream.finish
  zstream.close
  buf
end

out_name = "#{ARGV[0]}.out"
FileUtils.mkdir_p out_name

data = {}
File.open(ARGV[0]) do |f|
  
  # New wrapper format uses zip (magic bytes = 'PK')
  tmp = f.read(2)
  if(tmp == 'PK')
    puts `cd "#{out_name}" && unzip "../#{ARGV[0]}"`
    puts `$(pwd)/figunpack #{out_name}/canvas.fig`
    exit(0)
  end

  data[:header] = tmp + f.read(6)
  data[:version] = f.read(4).unpack("V")[0]
  data[:kiwib_length] = f.read(4).unpack("V")[0]
  data[:kiwib_raw] = f.read(data[:kiwib_length])
  data[:kiwib_inflated] = inflate(data[:kiwib_raw])
  data[:data_length] = f.read(4).unpack("V")[0]
  data[:data_raw] = f.read(data[:data_length])
  data[:data_inflated] = inflate(data[:data_raw])

  # Canvas files inside new format do not have thumbnail (it's in the wrapper zip)
  thumbnail_length = f.read(4)
  if(thumbnail_length)
    data[:thumbnail_length] = thumbnail_length.unpack("V")[0]
    data[:thumbnail_raw] = f.read(data[:thumbnail_length])
  end
end

data.each do |k,v|
  File.write("#{out_name}/#{k}", v)
end

puts `$(pwd)/kiwiparse "#{out_name}/kiwib_inflated" "#{out_name}/data_inflated" > "#{out_name}/data.json"`
